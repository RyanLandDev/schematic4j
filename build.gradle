plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

group 'net.sandrohc'
version '1.0.1'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

repositories {
    mavenCentral()
}

dependencies {
    api 'org.slf4j:slf4j-api:1.7.36'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.3.14'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'schematic4j',
                'Implementation-Version': project.version
        )
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

tasks.withType(JavaCompile) {
    // force UTF-8 encoding on Windows machines
    options.encoding = 'UTF-8'
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            //credentials {
            //    username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'unk'
            //    password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'unk'
            //}
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Schematic4J'
                description = 'Java parser for the .schem/.schematic/.litematic Minecraft formats. ðŸ—º'
                url = 'https://github.com/SandroHc/schematic4j'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'SandroHc'
                        name = 'Sandro Marques'
                        email = 'sandro123iv@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/SandroHc/schematic4j.git'
                    developerConnection = 'scm:git:ssh://github.com/SandroHc/schematic4j.git'
                    url = 'https://github.com/SandroHc/schematic4j'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/SandroHc/schematic4j/issues'
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}
tasks.withType(Sign).configureEach {
    onlyIf { System.env['JITPACK'] == null }
}
